{"remainingRequest":"/media/linux/Data/project/curriculum-vitae/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/linux/Data/project/curriculum-vitae/src/views/Page.vue?vue&type=template&id=5a7b936e&","dependencies":[{"path":"/media/linux/Data/project/curriculum-vitae/src/views/Page.vue","mtime":1605444484843},{"path":"/media/linux/Data/project/curriculum-vitae/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/linux/Data/project/curriculum-vitae/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/media/linux/Data/project/curriculum-vitae/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/linux/Data/project/curriculum-vitae/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}